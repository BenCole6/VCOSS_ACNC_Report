if(!("VCOSS_ACNC_Datasets_Combined" %in% ls())) {
  source("Data_Cleaning.R")
}

library(pacman)

p_load(ggplot2,
       tidyverse,
       scales,
       lemon,
       gganimate,
       gridExtra,
       rgdal,
       geosphere,
       mapproj)

VCOSS_colours <- c("#ea5d0a", "#4b55a1", "#f6a400", "black", "grey50")

## Coercing Year to factor
VCOSS_ACNC_Datasets_Combined$Year <- as.factor(VCOSS_ACNC_Datasets_Combined$Year)

## Data Overview

## Types of Organisations

Orgs_by_MainAct_Year <- arrange(summarise(group_by(VCOSS_ACNC_Datasets_Combined,
                                                   main_activity, Year),
                                          "No. of Orgs" = n()),
                                Year, main_activity)



Orgs_by_MainAct_Year <- rename(arrange(pivot_wider(Orgs_by_MainAct_Year,
                                                   names_from = Year, names_prefix = "No. of Orgs. ",
                                                   values_from = `No. of Orgs`),
                                       main_activity),
                               "Main Activity as specificied in the AIS" = main_activity)

Orgs_by_MainAct_Year <- mutate(Orgs_by_MainAct_Year,
                               "Change from 2017 to 2018" = (`No. of Orgs. 2018` - `No. of Orgs. 2017`))

Orgs_by_MainAct_Year <- rbind(Orgs_by_MainAct_Year,
                              colSums(Orgs_by_MainAct_Year[2:ncol(Orgs_by_MainAct_Year)]))

## Income

totgrosinc_mainact_year <- summarise(group_by(VCOSS_ACNC_Datasets_Combined,
                                              main_activity, Year),
                                     total_gross_income = sum(total_gross_income, na.rm = TRUE))

gg_totgrosinc_mainact_year <- ggplot(filter(totgrosinc_mainact_year,
                                            as.integer(as.character(Year)) >= 2016),
                                     aes(x = str_wrap(main_activity, 18), y = total_gross_income,
                                         fill = Year)) +
  geom_bar(stat = "identity",
           position = "dodge") +
  scale_x_discrete("Main Activity") +
  scale_y_continuous("Total Gross Income",
                     labels = dollar_format(scale = 1/1000000000,
                                            accuracy = 0.1,
                                            suffix = "bn"),
                     expand = c(0.025, 0.05)) +
  scale_fill_manual(values = VCOSS_colours) +
  ggtitle("Victorian community services industry total gross income 2016 - 2018",
          subtitle = "Main activity as reported in the AIS") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 35,
                                   hjust = 1),
        panel.grid.major.x = element_blank(),
        axis.ticks.x = element_line(colour = "grey50"))

ggsave(filename = "R_Visualisations/totalgrossincome_by_mainactivity_year.png",
       plot = gg_totgrosinc_mainact_year,
       height = 8, width = 12,
       units = "in", dpi = 750)

# cleaning up main beneficiaries

VCOSS_ACNC_Datasets_Combined$main_beneficiaries <- recode(VCOSS_ACNC_Datasets_Combined$main_beneficiaries,
                                                          "People at risk of homelessness/ people experiencing homelessness" = "People at risk of homelessness / people experiencing homelessness",
                                                          "People at risk of homelessness/people experiencing homelessness" = "People at risk of homelessness / people experiencing homelessness",
                                                          "Youth - 15 to under 25" = "Youth - aged 15 to under 25")

beneficiaries_mainact_year <- summarise(group_by(VCOSS_ACNC_Datasets_Combined,
                                                 Year, main_beneficiaries),
                                        "Number of Charities" = n())

beneficiaries_mainact_year <- filter(beneficiaries_mainact_year,
                                     !is.na(main_beneficiaries))

gg_beneficiaries_mainact_year <- ggplot(filter(beneficiaries_mainact_year,
                                               !str_detect(main_beneficiaries, "General community")),
                                        aes(x = `Number of Charities`, fill = fct_rev(Year),
                                            y = fct_rev(str_wrap(main_beneficiaries, 30)))) +
  geom_bar(stat = "identity",
           position = "dodge") +
  scale_x_continuous("Number of Charities",
                     labels = comma,
                     expand = c(0.005, 0.05)) +
  scale_y_discrete("Main Activity") +
  scale_fill_manual(values = VCOSS_colours,
                    "Year",
                    guide = guide_legend(reverse = TRUE)) +
  ggtitle("Beneficiaries of Victorian community services industry 2017 - 2018",
          subtitle = "Main beneficiaries as reported in the AIS") +
  theme_minimal() +
  theme(panel.grid.major.y = element_blank(),
        axis.ticks.y = element_line(colour = "grey50"))

ggsave(filename = "R_Visualisations/charitycount_by_beneficiaries.png",
       plot = gg_beneficiaries_mainact_year,
       height = 12, width = 8,
       units = "in", dpi = 750)

budgetstatus_mainact_year <- summarise(group_by(VCOSS_ACNC_Datasets_Combined,
                                                main_activity, Year),
                                       deficit = sum(net_surplus_deficit < 0),
                                       balanced = sum(net_surplus_deficit == 0),
                                       surplus = sum(net_surplus_deficit > 0))

budgetstatus_mainact_year <- pivot_longer(budgetstatus_mainact_year,
                                          cols = c(deficit, balanced, surplus),
                                          names_to = "Budget status",
                                          values_to = "Number of Charities")

budgetstatus_mainact_year <- mutate(group_by(budgetstatus_mainact_year,
                                             main_activity, Year),
                                    proportions = `Number of Charities` / sum(`Number of Charities`, na.rm = TRUE))

budgetstatus_mainact_year$`Budget status` <- factor(budgetstatus_mainact_year$`Budget status`,
                                                    levels = c("deficit", "balanced", "surplus"))

gg_budgetstatus_mainact_year <- ggplot(filter(budgetstatus_mainact_year,
                                              as.integer(as.character(Year)) >= 2016),
                                       aes(x = Year, y = proportions,
                                           fill = fct_rev(`Budget status`), group = fct_rev(`Budget status`))) +
  geom_bar(stat = "identity",
           position = "fill")  +
  geom_text(aes(label = percent(proportions, 0.1),
                y = proportions),
            position = position_fill(vjust = 0.5),
            size = 2.5) +
  facet_rep_wrap(~str_wrap(main_activity, 20),
                 scales = "free_y",
                 repeat.tick.labels = "x",
                 ncol = 3) +
  scale_fill_manual("Budget Status",
                    values = VCOSS_colours,
                    labels = function(x) str_to_sentence(x)) +
  scale_y_continuous("Proportion of charities",
                     labels = percent) +
  ggtitle("Victorian community service industry budget status",
          subtitle = "Main activity as reported in AIS") +
  theme_minimal() +
  theme(panel.grid.major.x = element_blank(),
        panel.grid.minor.y = element_blank(),
        axis.ticks.x = element_line(color = "grey"))

ggsave(filename = "R_Visualisations/budgetstatus_by_year_mainact.png",
       plot = gg_budgetstatus_mainact_year,
       height = 15, width = 10,
       units = "in", dpi = 750)

budgetstatus_year <- summarise(group_by(VCOSS_ACNC_Datasets_Combined,
                                        Year),
                               deficit = sum(net_surplus_deficit <0),
                               balanced = sum(net_surplus_deficit == 0),
                               surplus = sum(net_surplus_deficit > 0))

budgetstatus_year <- pivot_longer(budgetstatus_year,
                                  cols = c(deficit, balanced, surplus),
                                  names_to = "budget_status",
                                  values_to = "n_charities")

budgetstatus_year <- mutate(group_by(budgetstatus_year,
                                     Year),
                            proportion = (n_charities / sum(n_charities, na.rm = TRUE)))

budgetstatus_year$budget_status <- factor(budgetstatus_year$budget_status, 
                                          levels = c("deficit", "balanced", "surplus"))

gg_budgetstatus_year <- ggplot(budgetstatus_year,
                               aes(x = Year, y = proportion,
                                   fill = fct_rev(budget_status))) +
  geom_bar(stat = "identity",
           position = "fill") +
  geom_text(aes(label = percent(proportion, 0.1)),
            position = position_stack(vjust = 0.5)) +
  scale_fill_manual("Budget status", 
                    values = VCOSS_colours,
                    labels = function(x) str_to_sentence(x)) +
  scale_y_continuous("Proportion of charities",
                     labels = percent,
                     expand = c(0.0125, 0.0125)) +
  ggtitle("Victorian community service industry budget status") +
  theme_minimal() +
  theme(panel.grid.major.x = element_blank(),
        panel.grid.minor.y = element_blank(),
        axis.ticks.x = element_line(color = "grey"))

ggsave(filename = "R_Visualisations/budgetstatus_by_year.png",
       plot = gg_budgetstatus_year,
       height = 10, width = 12,
       units = "in", dpi = 750)


budgetstatus_vcosscharsize_year <- summarise(group_by(VCOSS_ACNC_Datasets_Combined,
                                                      Year, VCOSS_charitysize),
                                             deficit = sum(net_surplus_deficit < 0),
                                             balanced = sum(net_surplus_deficit == 0),
                                             surplus = sum(net_surplus_deficit > 0))

budgetstatus_vcosscharsize_year <- pivot_longer(budgetstatus_vcosscharsize_year,
                                                cols = c(deficit, balanced, surplus),
                                                names_to = "budget_status",
                                                values_to = "n_charities")

budgetstatus_vcosscharsize_year <- mutate(group_by(budgetstatus_vcosscharsize_year,
                                                   Year, VCOSS_charitysize),
                                          proportion = (n_charities / sum(n_charities, na.rm = TRUE)))

budgetstatus_vcosscharsize_year$budget_status <- factor(budgetstatus_vcosscharsize_year$budget_status,
                                                        levels = c("deficit", "balanced", "surplus"))


gg_budgetstatus_vcosscharsize_year <- ggplot(filter(budgetstatus_vcosscharsize_year,
                                                    proportion > 0.00009),
                                             aes(x = Year, y = proportion,
                                                 fill = fct_rev(budget_status), group = fct_rev(budget_status))) +
  geom_bar(stat = "identity",
           position = "fill") +
  geom_text(aes(label = percent(proportion, 0.1)),
            position = position_stack(vjust = 0.5)) +
  facet_rep_wrap(~VCOSS_charitysize,
                 repeat.tick.labels = "x") +
  scale_fill_manual("Budget status", 
                    values = VCOSS_colours,
                    labels = function(x) str_to_sentence(x)) +
  scale_y_continuous("Proportion of charities",
                     labels = percent,
                     expand = c(0.0125, 0.0125)) +
  ggtitle("Victorian community service industry budget status",
          "VCOSS-specified charity size based on Total Gross Income") +
  theme_minimal() +
  theme(panel.grid.major.x = element_blank(),
        panel.grid.minor.y = element_blank(),
        axis.ticks.x = element_line(color = "grey"))

ggsave(filename = "R_Visualisations/budgetstatus_by_vcosscharitysize_year.png",
       plot = gg_budgetstatus_vcosscharsize_year,
       height = 10, width = 12,
       units = "in", dpi = 750)

gg_pie_budgetstatus_mainact_year <- ggplot(filter(budgetstatus_mainact_year,
                                                  as.integer(Year) >= 4),
                                           aes(y = proportions, fill = `Budget status`,
                                               x = Year)) +
  geom_bar(stat = "identity") +
  geom_text(aes(label = Year),
            y = 0.5, check_overlap = TRUE) +
  facet_wrap(~ str_wrap(main_activity, 20)) +
  scale_fill_manual(values = VCOSS_colours) +
  coord_polar("y", start = 0) +
  ggtitle("Budget status of Victorian community service charities 2017 - 2018") +
  theme_void()

ggsave(filename = "R_Visualisations/piechart_budgetstatus_by_year_mainact.png",
       plot = gg_pie_budgetstatus_mainact_year,
       height = 12, width = 12,
       units = "in", dpi = 750)

mainact_year <- summarise(group_by(VCOSS_ACNC_Datasets_Combined,
                                   main_activity, Year),
                          count = n())

gg_mainact_year <- ggplot(group_by(mainact_year, main_activity),
                          aes(x = Year, y = count,
                              group = main_activity,
                              colour = main_activity)) +
  geom_line(colour = VCOSS_colours[1],
            size = 7/8) +
  geom_point(colour = VCOSS_colours[1],
             size = 14/8) +
  facet_rep_wrap(~str_wrap(main_activity, 28),
                 scales = "free_y",
                 repeat.tick.labels = "x",
                 ncol = 3) +
  scale_y_continuous("Number of Charities",
                     limits = c(0, NA)) +
  ggtitle("Change in Victorian community service charities over time",
          subtitle = "Main activity as reported in the AIS") +
  theme_minimal() +
  theme(panel.grid.major.x = element_blank(),
        panel.grid.minor.y = element_blank())

ggsave(filename = "R_Visualisations/charitycount_by_mainact_year.png",
       plot = gg_mainact_year,
       height = 12, width = 8,
       units = "in", dpi = 750)  

gg_totalcharity_count <- ggplot(VCOSS_ACNC_Datasets_Combined,
                                aes(x = Year)) +
  geom_bar(fill = VCOSS_colours[3]) +
  geom_text(aes(label = comma(..count..)),
            stat = "count",
            vjust = 1.5) +
  scale_y_continuous("Number of charities",
                     labels = comma,
                     expand = c(0.05, 0.05)) +
  ggtitle("Total Victorian community service charities 2014 - 2016") +
  theme_minimal() +
  theme(panel.grid.major.x = element_blank())

ggsave(filename = "R_Visualisations/total_charitycount_by_year.png",
       plot = gg_totalcharity_count,
       height = 9, width = 10,
       units = "in", dpi = 750)  

gg_employeeexpenses <- ggplot(filter(VCOSS_ACNC_Datasets_Combined,
                                     as.integer(as.character(Year)) >= 2016),
                              aes(x = employeeexpenses_per_employee)) +
  geom_histogram(fill = VCOSS_colours[3],
                 colour = "grey75") +
  scale_x_continuous("Employee Expenses per Employee",
                     labels = dollar,
                     trans = "log10") +
  scale_y_continuous("Number of charities", labels = comma) +
  scale_fill_manual(values = rev(VCOSS_colours)) +
  scale_colour_manual(values = rev(VCOSS_colours)) +
  guides(colour = "none", fill = "none") +
  ggtitle("Employee expenses of Victorian community service charities",
          "Average expenses per employee as reported in the AIS\nYear: {closest_state}") +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(),
        panel.grid.major.x = element_blank(),
        text = element_text(size = 18)) +
  transition_states(as.integer(as.character(Year)),
                    state_length = 6,
                    transition_length = 0)

anim_save(filename = "R_Visualisations/vic_commservice_employeeexpenses.gif",
          animation = gg_employeeexpenses,
          end_pause = 25, fps = 4,
          height = 1000, width = 1250)

gg_totalgrossincome <- ggplot(filter(VCOSS_ACNC_Datasets_Combined,
                                     as.integer(as.character(Year)) >= 2016),
                              aes(x = total_gross_income, frame = Year)) +
  geom_histogram(fill = VCOSS_colours[3],
                 colour = "grey75") +
  scale_x_continuous("Total Gross Income",
                     labels = dollar,
                     trans = "log10") +
  scale_y_continuous("Number of charities",
                     labels = comma,
                     expand = c(0.05, 0.05)) +
  scale_fill_manual(values = rev(VCOSS_colours)) +
  scale_colour_manual(values = rev(VCOSS_colours)) +
  guides(colour = "none", fill = "none") +
  ggtitle("Distribution of total gross income of Victorian community service charities",
          "Total gross income as reported in the AIS\nYear: {closest_state}") +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(),
        panel.grid.major.x = element_blank(),
        text = element_text(size = 18),
        axis.text.x = element_text(angle = 20, hjust = 1),
        axis.ticks.x = element_line(colour = "grey"))  +
  transition_states(as.integer(as.character(Year)),
                    state_length = 6,
                    transition_length = 0)

anim_save(filename = "R_Visualisations/vic_commservice_totalgrossincome.gif",
          animation = gg_totalgrossincome,
          end_pause = 25, fps = 4,
          height = 1000, width = 1250)

mainact_year_donationsmade <- summarise(group_by(VCOSS_ACNC_Datasets_Combined,
                                                 main_activity, Year),
                                        total_donations_made = sum(grants_and_donations_made_for_use_in_australia,
                                                                   grants_and_donations_made_for_use_outside_australia,
                                                                   na.rm = TRUE))

mainact_year_donationsmade_16to18 <- filter(mainact_year_donationsmade,
                                            as.integer(as.character(Year)) >= 2016,
                                            total_donations_made > 0)

gg_mainact_year_donationsmade <- ggplot(mainact_year_donationsmade_16to18,
                                        aes(x = str_wrap(main_activity, 30),
                                            y = total_donations_made,
                                            fill = Year)) +
  geom_bar(stat = "identity",
           position = "dodge") +
  scale_y_continuous("Total donations made",
                     labels = dollar_format(scale = 0.000001,
                                            suffix = "m"),
                     expand = c(0.0125, 0.025)) +
  scale_x_discrete("Main activity") +
  ggtitle("All donations made by Victorian community service charities",
          subtitle = "Main activity as reported in the AIS") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 35, hjust = 1,
                                   size = 8),
        axis.ticks.x = element_line(colour = "grey"),
        panel.grid.major.x = element_blank()) +
  scale_fill_manual(values = VCOSS_colours)

ggsave(filename = "R_Visualisations/alldonationsmade_by_mainact_year.png",
       plot = gg_mainact_year_donationsmade,
       dpi = 750,
       height = 8, width = 12,
       units = "in")

VCOSS_ACNC_Datasets_Combined$VCOSS_charitysize <- factor(VCOSS_ACNC_Datasets_Combined$VCOSS_charitysize,
                                                         levels = c("Extra Small", "Small", "Medium", "Large", "Extra Large", "Extra Extra Large"))


ggplot(VCOSS_ACNC_Datasets_Combined,
       aes(x = Year, fill = fct_rev(VCOSS_charitysize))) +
  geom_bar(position = "stack") +
  geom_text(stat = "count",
            aes(label = ..count..,
                y = ..count..),
            colour = "white", position = position_stack(vjust = 0.5),
            check_overlap = TRUE) +
  scale_fill_manual(values = c("cyan", VCOSS_colours),
                    "Charity Size") +
  scale_y_continuous("Number of charities", labels = comma,
                     expand = c(0.0125, 0.025)) +
  ggtitle("Changes in charity sizes throughout the years",
          subtitle = "VCOSS-defined charity size using total gross income as reported in the AIS") +
  theme_minimal() +
  theme(panel.grid.major.x = element_blank())

vcoss_charitysize_year <- summarise(group_by(VCOSS_ACNC_Datasets_Combined,
                                             VCOSS_charitysize, Year),
                                    count = n())

gg_vcoss_charitysize_year <- ggplot(vcoss_charitysize_year,
                                    aes(x = Year, y = count,
                                        colour = VCOSS_charitysize,
                                        group = VCOSS_charitysize)) +
  geom_line(position = "identity",
            size = 7/8) +
  geom_point(size = 14/8) +
  scale_colour_manual(values = c("cyan", VCOSS_colours),
                      "Charity Size") +
  scale_y_continuous("Number of charities", labels = comma,
                     expand = c(0.0125, 0.025)) +
  ggtitle("Changes in charity sizes throughout the years",
          subtitle = "VCOSS-defined charity size using total gross income as reported in the AIS") +
  theme_minimal() +
  theme(panel.grid.major.x = element_blank())

ggsave(filename = "R_Visualisations/charitycount_by_VCOSScharitysize_year.png",
       plot = gg_vcoss_charitysize_year,
       height = 8, width = 12,
       units = "in", dpi = 750)

VCOSS_ACNC_Datasets_Combined$cleaned_charitysize <- factor(VCOSS_ACNC_Datasets_Combined$cleaned_charitysize,
                                                           levels = c("S", "M", "L"),
                                                           labels = c("Small", "Medium", "Large"))

incomesource_charsize_year <- summarise(group_by(VCOSS_ACNC_Datasets_Combined,
                                                 cleaned_charitysize, Year),
                                        government_grants = sum(government_grants, na.rm = TRUE),
                                        donations_and_bequests = sum(donations_and_bequests, na.rm = TRUE),
                                        other_income_and_revenue = sum(other_income, revenue_from_goods_and_services,
                                                                       revenue_from_investments, all_other_revenue,
                                                                       na.rm = TRUE))

incomesource_charsize_year <- pivot_longer(incomesource_charsize_year,
                                           cols = c(government_grants, donations_and_bequests,
                                                    other_income_and_revenue),
                                           names_to = "income_source",
                                           values_to = "income_amount")

incomesource_charsize_year$income_source <- factor(incomesource_charsize_year$income_source,
                                                   levels = c("government_grants", "donations_and_bequests",
                                                              "other_income_and_revenue"),
                                                   labels = c("Government\ngrants", "Donations and\nbequests",
                                                              "Other income\nand revenue"))

incomesource_charsize_year <- mutate(group_by(incomesource_charsize_year,
                                              cleaned_charitysize, Year),
                                     income_proportion = (income_amount / sum(income_amount)))

gg_incomesource_charsize_year <- ggplot(group_by(filter(incomesource_charsize_year,
                                                       as.integer(as.character(Year)) >= 2016),
                                                 Year, cleaned_charitysize),
                                        aes(x = Year, y = income_proportion,
                                            fill = fct_rev(income_source))) +
  geom_bar(stat = "identity",
           position = "fill") +
  geom_text(aes(label = percent(income_proportion,
                                0.1),
                y = income_proportion),
            position = position_stack(vjust = 0.5),
            check_overlap = TRUE,
            colour = "white") +
  facet_wrap(~cleaned_charitysize,
             nrow = 1) +
  scale_y_continuous("Proportion of Income",
                     labels = percent,
                     expand = c(0.0025, 0.0025)) +
  scale_fill_manual(values = VCOSS_colours[c(3, 1, 2)],
                    "Income source") +
  theme_minimal() +
  theme(panel.grid.major.x = element_blank(),
        legend.key.size = unit(8, "mm"))

gg_line_incomesource_charsize_year <- ggplot(filter(incomesource_charsize_year,
                                                    as.integer(as.character(Year)) >= 2016),
                                             aes(x = Year, y = income_amount,
                                                 group = income_source, colour = fct_rev(income_source))) +
  geom_line() +
  geom_point() +
  facet_wrap(~cleaned_charitysize,
             nrow = 1,
             scales = "free_y") +
  scale_color_manual("Income Source",
                     values = VCOSS_colours[c(3, 1, 2)]) +
  scale_y_continuous("Total Income Amount",
                     labels = dollar_format(scale = 0.000001,
                                            suffix = "m"),
                     limits = c(0, NA),
                     breaks = breaks_extended(n = 6)) +
  scale_x_discrete("") +
  ggtitle("Breakdown of income amount by community service charity size and income source") +
  theme_minimal() +
  theme(panel.grid.major.x = element_blank())

gg_income_combined <- grid.arrange(gg_line_incomesource_charsize_year,
                                   gg_incomesource_charsize_year,
                                   nrow = 2,
                                   heights = c(2, 3))

ggsave(filename = "R_Visualisations/breakdown_incomesource_by_charitysize_year.png",
       plot = gg_income_combined,
       width = 16, height = 10,
       units = "in", dpi = 750)


incomesource_mainact_year <- summarise(group_by(VCOSS_ACNC_Datasets_Combined,
                                                main_activity, Year),
                                       government_grants = sum(government_grants, na.rm = TRUE),
                                       donations_and_bequests = sum(donations_and_bequests, na.rm = TRUE),
                                       other_income_and_revenue = sum(other_income, revenue_from_goods_and_services,
                                                                      revenue_from_investments, all_other_revenue,
                                                                      na.rm = TRUE))

incomesource_mainact_year <- pivot_longer(incomesource_mainact_year,
                                          cols = c(government_grants, donations_and_bequests, other_income_and_revenue),
                                          names_to = "income_source",
                                          values_to = "income_amount")

incomesource_mainact_year$income_source <- factor(incomesource_mainact_year$income_source,
                                                   levels = c("government_grants", "donations_and_bequests",
                                                              "other_income_and_revenue"),
                                                   labels = c("Government\ngrants", "Donations and\nbequests",
                                                              "Other income\nand revenue"))

incomesource_mainact_year <- mutate(group_by(incomesource_mainact_year,
                                             main_activity, Year),
                                    income_proportion = (income_amount / sum(income_amount)))

gg_incomesource_mainact_year <- ggplot(incomesource_mainact_year,
                                       aes(x = Year, y = income_proportion,
                                           fill = fct_rev(income_source), group = fct_rev(income_source))) +
  geom_area() +
  facet_rep_wrap(~str_wrap(main_activity),
                 ncol = 3,
                 repeat.tick.labels = "x") +
  scale_y_continuous("Proportion of Income",
                     labels = percent,
                     limits = c(0, 1)) +
  scale_x_discrete(expand = c(0.025, 0.025)) +
  scale_fill_manual("Income source",
                    values = VCOSS_colours[c(3, 1, 2)]) +
  theme_minimal() +
  theme(legend.position = c(0.9, 0.1))

ggsave(filename = "R_Visualisations/incomeshare_by_mainactivity_year.png",
       plot = gg_incomesource_mainact_year,
       height = 12, width = 10,
       units = "in", dpi = 750)


totalstaff_year <- summarise(group_by(VCOSS_ACNC_Datasets_Combined,
                                      Year),
                             staff_part_time = sum(staff_part_time, na.rm = TRUE),
                             staff_full_time = sum(staff_full_time, na.rm = TRUE),
                             staff_casual = sum(staff_casual, na.rm = TRUE),
                             staff_volunteers = sum(staff_volunteers, na.rm = TRUE))

totalstaff_year <- pivot_longer(totalstaff_year,
                                cols = c(staff_part_time, staff_full_time,
                                         staff_casual, staff_volunteers),
                                names_to = "employment_type",
                                values_to = "number_of_employees")


state_shpfile <- readOGR("Postcodes_shpfiles/ll_gda94/sde_shape/whole/VIC/VMADMIN/layer/postcode_polygon.shp")

state_postcodes <- fortify(state_shpfile)

postcode_id <- as.data.frame(cbind(unique(state_postcodes$id),
                                   state_shpfile[["POSTCODE"]]))

colnames(postcode_id) <- c("ID", "Postcode")

state_postcodes <- left_join(state_postcodes,
                             postcode_id,
                             by = c("id" = "ID"))

state_postcodes <- rbind(mutate(state_postcodes,
                                Year = 2014),
                         mutate(state_postcodes,
                                Year = 2015),
                         mutate(state_postcodes,
                                Year = 2016),
                         mutate(state_postcodes,
                                Year = 2017),
                         mutate(state_postcodes,
                                Year = 2018))

state_postcodes$Year <- factor(state_postcodes$Year)

paidstaff_postcode <- summarise(group_by(VCOSS_ACNC_Datasets_Combined,
                                         Year, postcode),
                                paid_staff = sum(staff_full_time,
                                                 staff_part_time,
                                                 staff_casual))

paidstaff_postcode_poly <- left_join(state_postcodes,
                                     paidstaff_postcode,
                                     by = c("Postcode" = "postcode",
                                            "Year" = "Year"))

# paidstaff_postcode_poly$paid_staff[which(paidstaff_postcode_poly$paid_staff == 0)] <- 0.1

max(paidstaff_postcode_poly$paid_staff, na.rm = TRUE)

logscalefunc <- function(from=1, to = 1000000) {
  
  max_power <- ceiling(log10(to))
  
  10^(0:max_power)
  
}

vcoss_grad <- function(ncolours) {div_gradient_pal(low = "#6e98b5",
                                                   mid = "#f7e707",
                                                   high = "#ea3609")(seq(0, 1, length.out = ncolours))}

paidstaff_postcode_poly <- mutate(paidstaff_postcode_poly,
                                  paidstaff_log = factor(10^ceiling(log10(paid_staff))))

staff_labels <- comma(as.numeric(as.character(levels(paidstaff_postcode_poly$paidstaff_log))), 1)

levels(paidstaff_postcode_poly$paidstaff_log) <- staff_labels

centroid_data <- NULL

for(ith_postcode in unique(paidstaff_postcode_poly$Postcode)) {
  
  temp_data <- filter(paidstaff_postcode_poly,
                      Postcode == ith_postcode)
  
  centroid <- centroid(cbind(temp_data$long, temp_data$lat))
  
  centroid_data <- rbind(centroid_data,
                         data.frame(Postcode = ith_postcode,
                                    centroid_long = centroid[1], centroid_lat = centroid[2]))
  
}

paidstaff_postcode_poly$paidstaff_log <- replace_na(paidstaff_postcode_poly$paidstaff_log, 0)

gg_polygon_paidstaff_year_metro <- ggplot(filter(paidstaff_postcode_poly,
                                                 Year == "2018"),
                                          aes(x = long, y = lat,
                                              fill = paidstaff_log, group = Postcode)) +
  geom_polygon(aes(subgroup = piece),
               colour = NA) +
  geom_text(data = centroid_data,
            inherit.aes = FALSE,
            aes(x = centroid_long, y = centroid_lat,
                label = Postcode),
            check_overlap = TRUE) +
  scale_fill_manual("Total paid staff",
                    values = c("grey75", vcoss_grad(6)),
                    guide = "legend") +
  ggtitle("Total paid staff in Victorian community service charities per postcode in 2018",
          "Metro Melbourne area\n ") +
  coord_equal(xlim = c(144.25, 145.50),
              ylim = c(-38.50, -37.50)) +
  theme_void()

ggsave(plot = gg_polygon_paidstaff_year_metro,
       filename = "R_Visualisations/metromap_paidstaff_postcode.png",
       height = 15, width = 18,
       units = "in", dpi = 1000)

gg_polygon_paidstaff_year_state <- ggplot(filter(paidstaff_postcode_poly,
                                                 Year == "2018"),
                                          aes(x = long, y = lat,
                                              fill = paidstaff_log, group = Postcode)) +
  geom_polygon(aes(subgroup = piece),
               colour = NA) +
  scale_fill_manual("Total paid staff",
                    values = c("grey75", vcoss_grad(6)),
                    guide = "legend") +
  ggtitle("Total paid staff in Victorian community service charities per postcode 2018") +
  coord_equal() +
  theme_void()

ggsave(plot = gg_polygon_paidstaff_year_state,
       filename = "R_Visualisations/statemap_paidstaff_postcode.png",
       height = 15, width = 18,
       units = "in", dpi = 1000)

volunteers_postcode_year <- summarise(group_by(VCOSS_ACNC_Datasets_Combined,
                                               postcode, Year),
                                      volunteers = sum(staff_volunteers, na.rm = TRUE))

volunteers_postcode_year <- filter(volunteers_postcode_year,
                                   Year != "2014")

state_postcodes_15to18 <- filter(state_postcodes,
                                 Year != 2014)

volunteers_postcode_year <- left_join(state_postcodes_15to18,
                                      volunteers_postcode_year,
                                      by = c("Postcode"="postcode",
                                             "Year"="Year"))

volunteers_postcode_year <- mutate(volunteers_postcode_year,
                                   volunteers_log = 10^ceiling(log10(volunteers)))

volunteers_postcode_year$volunteers_log <- factor(volunteers_postcode_year$volunteers_log)

volunteer_labels <- levels(volunteers_postcode_year$volunteers_log)

volunteer_labels <- comma(as.integer(volunteer_labels), 1)

levels(volunteers_postcode_year$volunteers_log) <- volunteer_labels

volunteers_postcode_year$volunteers_log <- replace_na(volunteers_postcode_year$volunteers_log, 0)

gg_polygon_volunteers_year_metro <- ggplot(filter(volunteers_postcode_year,
                                                  Year == 2018),
                                          aes(x = long, y = lat,
                                              fill = volunteers_log, group = Postcode)) +
  geom_polygon(colour = NA) +
  geom_text(data = centroid_data,
            inherit.aes = FALSE,
            aes(x = centroid_long, y = centroid_lat,
                label = Postcode),
            check_overlap = TRUE) +
  scale_fill_manual("Total volunteers",
                    values = c("grey75", vcoss_grad(6)),
                    guide = "legend") +
  ggtitle("Total volunteers in Victorian community service charities per postcode in 2018",
          "Metro Melbourne area\n ") +
  coord_equal(xlim = c(144.25, 145.50),
              ylim = c(-38.50, -37.50)) +
  theme_void() +
  theme(panel.spacing = unit(5, "mm"))

ggsave(plot = gg_polygon_volunteers_year_metro,
       filename = "R_Visualisations/metromap_volunteers_postcode.png",
       height = 15, width = 18,
       units = "in", dpi = 1000)

gg_polygon_volunteers_year_state <- ggplot(filter(volunteers_postcode_year,
                                                  Year == "2018"),
                                           aes(x = long, y = lat,
                                               fill = volunteers_log, group = Postcode)) +
  geom_polygon(aes(subgroup = piece),
               colour = NA) +
  scale_fill_manual("Total volunteers",
                    values = c("grey75", vcoss_grad(8)),
                    na.value = "grey25",
                    guide = "legend") +
  ggtitle("Total volunteers in Victorian community service charities per postcode in 2018") +
  coord_equal() +
  theme_void()

ggsave(plot = gg_polygon_volunteers_year_state,
       filename = "R_Visualisations/statemap_volunteers_postcode_year.png",
       height = 15, width = 18,
       units = "in", dpi = 1000)

charitycount_postcode <- summarise(group_by(VCOSS_ACNC_Datasets_Combined,
                                            Year, postcode),
                                   n_charities = n())

charitycount_postcode_2018 <- filter(charitycount_postcode,
                                     Year == 2018)

charitycount_postcode_2018_poly <- left_join(filter(state_postcodes,
                                                    Year == 2018),
                                             charitycount_postcode_2018,
                                             by = c("Postcode" = "postcode",
                                                    "Year" = "Year"))

charitycount_postcode_2018_poly$n_charities <- replace_na(charitycount_postcode_2018_poly$n_charities,
                                                          0)


charitycount_postcode_2018_poly <- mutate(charitycount_postcode_2018_poly,
                                          charitycount_log = 10^(ceiling(log10(n_charities))))

charitycount_postcode_2018_poly$charitycount_log <- factor(charitycount_postcode_2018_poly$charitycount_log)

charcount_labels <- comma(as.integer(levels(charitycount_postcode_2018_poly$charitycount_log)), 1)

levels(charitycount_postcode_2018_poly$charitycount_log) <- charcount_labels

gg_state_charitycount_postcode_2018_poly <- ggplot(charitycount_postcode_2018_poly,
                                                   aes(x = long, y = lat,
                                                       group = group, subgroup = piece,
                                                       fill = charitycount_log)) +
  geom_polygon() +
  scale_fill_manual("Number of charities",
                    values = c("grey75", vcoss_grad(4))) +
  ggtitle("Total number of Victorian community service charities per postcode 2018") +
  coord_equal() +
  theme_void()

ggsave(plot = gg_state_charitycount_postcode_2018_poly,
       filename = "R_Visualisations/statemap_totalcharities_postcode.png",
       height = 15, width = 18,
       units = "in", dpi = 1000)

gg_charcount_postcode_metro <- ggplot(charitycount_postcode_2018_poly,
                                      aes(x = long, y = lat,
                                          group = group, subgroup = piece,
                                          fill = charitycount_log)) +
  geom_polygon() +
  geom_text(inherit.aes = FALSE,
            data = centroid_data,
            aes(x = centroid_long, y = centroid_lat,
                label = Postcode),
            size = 3.5,
            check_overlap = TRUE) +
  scale_fill_manual("Number of charities",
                    values = c("grey75", vcoss_grad(4))) +
  ggtitle("Total number of Victorian community service charities per postcode 2018",
          "Metro Melbourne area\n ") +
  coord_equal(xlim = c(144.25, 145.50),
              ylim = c(-38.50, -37.50)) +
  theme_void()

ggsave(plot = gg_charcount_postcode_metro,
       filename = "R_Visualisations/metromap_totalcharities_postcode.png",
       height = 15, width = 18,
       units = "in", dpi = 1000)

beepr::beep(5)
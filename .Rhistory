inaccurate_income_reported = case_when(cleaned_charitysize == "S" &
income_variance > 25000 ~ "invalid",
cleaned_charitysize == "M" &
income_variance > 100000 ~ "invalid",
cleaned_charitysize == "L" &
income_variance > 1000000 ~ "invalid"))
data$inaccurate_income_reported <- replace_na(data$inaccurate_income_reported,
"valid")
return(data)
}
temp <- lapply(VCOSS_ACNC_Datasets_14to18,
Inaccurate_income)
summarise(ungroup(temp$datadotgov_ais16),
count_inaccurate = sum(inaccurate_income_reported == "inaccurate"),
count_accurate = sum(inaccurate_income_reported == "accurate"),
inaccurate_pc = count_inaccurate / nrow(temp$datadotgov_ais16))
Inaccurate_income <- function(data) {
data <- mutate(data,
reported_income = sum(all_of(get(Income_cols))),
income_variance = abs(reported_income - total_gross_income),
inaccurate_income_reported = case_when(cleaned_charitysize == "S" &
income_variance > 25000 ~ "inaccurate",
cleaned_charitysize == "M" &
income_variance > 100000 ~ "inaccurate",
cleaned_charitysize == "L" &
income_variance > 1000000 ~ "inaccurate"))
data$inaccurate_income_reported <- replace_na(data$inaccurate_income_reported,
"accurate")
return(data)
}
temp <- lapply(VCOSS_ACNC_Datasets_14to18,
Inaccurate_income)
summarise(ungroup(temp$datadotgov_ais16),
count_inaccurate = sum(inaccurate_income_reported == "inaccurate"),
count_accurate = sum(inaccurate_income_reported == "accurate"),
inaccurate_pc = count_inaccurate / nrow(temp$datadotgov_ais16))
filter(temp$datadotgov_ais16,
inaccurate_income_reported == "inaccurate")
InaccurateIncome_2016 <- filter(temp$datadotgov_ais16,
inaccurate_income_reported == "inaccurate")
VCOSS_ACNC_2016_data <- clean_names(read_excel("Datasets/VCOSS - 2016 ACNC Data.xlsx"))
filter(VCOSS_ACNC_2016_data,
abn %in% InaccurateIncome_2016$abn)
filter(VCOSS_ACNC_2016_data,
abn %in% InaccurateIncome_2016$abn) %>% View("original")
Income_cols <- c("government_grants",
"donations_and_bequests",
"all_other_revenue",
"other_income") ## hard coded from VCOSS_ACNC_2016_columns
Inaccurate_income <- function(data) {
data <- mutate(data,
reported_income = sum(all_of(get(Income_cols))),
income_variance = abs(reported_income - total_gross_income),
inaccurate_income_reported = case_when(cleaned_charitysize == "S" &
income_variance > 25000 ~ "inaccurate",
cleaned_charitysize == "M" &
income_variance > 100000 ~ "inaccurate",
cleaned_charitysize == "L" &
income_variance > 1000000 ~ "inaccurate"))
data$inaccurate_income_reported <- replace_na(data$inaccurate_income_reported,
"accurate")
return(data)
}
temp <- lapply(VCOSS_ACNC_Datasets_14to18,
Inaccurate_income)
InaccurateIncome_2016 <- filter(temp$datadotgov_ais16,
inaccurate_income_reported == "inaccurate")
filter(VCOSS_ACNC_2016_data,
abn %in% InaccurateIncome_2016$abn) %>% View("original")
View(InaccurateIncome_2016)
Inaccurate_income <- function(data) {
data <- mutate(data,
reported_income = sum(get(Income_cols)),
income_variance = abs(reported_income - total_gross_income),
inaccurate_income_reported = case_when(cleaned_charitysize == "S" &
income_variance > 25000 ~ "inaccurate",
cleaned_charitysize == "M" &
income_variance > 100000 ~ "inaccurate",
cleaned_charitysize == "L" &
income_variance > 1000000 ~ "inaccurate"))
data$inaccurate_income_reported <- replace_na(data$inaccurate_income_reported,
"accurate")
return(data)
}
temp <- lapply(VCOSS_ACNC_Datasets_14to18,
Inaccurate_income)
InaccurateIncome_2016 <- filter(temp$datadotgov_ais16,
inaccurate_income_reported == "inaccurate")
VCOSS_ACNC_2016_data <- clean_names(read_excel("Datasets/VCOSS - 2016 ACNC Data.xlsx"))
filter(VCOSS_ACNC_2016_data,
abn %in% InaccurateIncome_2016$abn) %>% View("original")
View(InaccurateIncome_2016)
mutate(VCOSS_ACNC_Datasets_14to18$datadotgov_ais16,
reported_income = sum(Income_cols))
mutate(VCOSS_ACNC_Datasets_14to18$datadotgov_ais16,
reported_income = sum(get(Income_cols)))
mutate(VCOSS_ACNC_Datasets_14to18$datadotgov_ais16,
reported_income = sum(get(Income_cols))) %>% View("new")
mutate(VCOSS_ACNC_Datasets_14to18$datadotgov_ais16,
reported_income = sum(get(all_of(Income_cols)))) %>% View("new")
mutate(rowwise(VCOSS_ACNC_Datasets_14to18$datadotgov_ais16),
reported_income = sum(get(all_of(Income_cols)))) %>% View("new")
mutate(rowwise(VCOSS_ACNC_Datasets_14to18$datadotgov_ais16),
reported_income = sum(c_across(Income_cols))) %>% View("new")
Inaccurate_income <- function(data) {
data <- mutate(data,
reported_income = sum(c_across(Income_cols)),
income_variance = abs(reported_income - total_gross_income),
inaccurate_income_reported = case_when(cleaned_charitysize == "S" &
income_variance > 25000 ~ "inaccurate",
cleaned_charitysize == "M" &
income_variance > 100000 ~ "inaccurate",
cleaned_charitysize == "L" &
income_variance > 1000000 ~ "inaccurate"))
data$inaccurate_income_reported <- replace_na(data$inaccurate_income_reported,
"accurate")
return(data)
}
temp <- lapply(VCOSS_ACNC_Datasets_14to18,
Inaccurate_income)
InaccurateIncome_2016 <- filter(temp$datadotgov_ais16,
inaccurate_income_reported == "inaccurate")
VCOSS_ACNC_2016_data <- clean_names(read_excel("Datasets/VCOSS - 2016 ACNC Data.xlsx"))
filter(VCOSS_ACNC_2016_data,
abn %in% InaccurateIncome_2016$abn) %>% View("removed but in original")
filter(InaccurateIncome_2016,
abn %in% VCOSS_ACNC_2016_data$abn) %>% View("removed but in original")
VCOSS_ACNC_Datasets_14to18 <- lapply(VCOSS_ACNC_Datasets_14to18,
Inaccurate_income)
lapply(VCOSS_ACNC_Datasets_14to18,
function(data) {
filter(data,
inaccurate_income_reported == "accurate")
})
VCOSS_ACNC_Datasets_14to18 <- lapply(VCOSS_ACNC_Datasets_14to18,
function(data) {
filter(data,
inaccurate_income_reported == "accurate")
})
rm(list=ls())
gc()
source('B:/Analytics/VCOSS_ACNC_Report/Data_Cleaning.R', echo=TRUE)
beepr::beep(6)
beepr::beep(7)
beepr::beep(8)
beepr::beep(5)
source('B:/Analytics/VCOSS_ACNC_Report/Data_Cleaning.R', echo=TRUE)
VCOSS_cleaned_data <- read_excel("Datasets/VCOSS - 2016 ACNC Data.xlsx")
filter(VCOSS_ACNC_Datasets_14to18$datadotgov_ais16,
!(abn %in% VCOSS_cleaned_data$ABN))
VCOSS_cleaned_data <- clean_names(read_excel("Datasets/VCOSS - 2016 ACNC Data.xlsx"))
lapply(VCOSS_ACNC_Datasets_14to18,
function(data) {
filter(data,
str_detect(state,
regex("vic|victoria|v", ignore_case = TRUE)))
})
VCOSS_ACNC_Datasets_14to18 <- lapply(VCOSS_ACNC_Datasets_14to18,
function(data) {
filter(data,
str_detect(state,
regex("vic|victoria|v", ignore_case = TRUE)))
})
VCOSS_cleaned_data <- clean_names(read_excel("Datasets/VCOSS - 2016 ACNC Data.xlsx"))
filter(VCOSS_ACNC_Datasets_14to18$datadotgov_ais16,
!(abn %in% VCOSS_cleaned_data$abn))
filter(VCOSS_cleaned_data,
!(abn %in% VCOSS_ACNC_Datasets_14to18$datadotgov_ais16$abn))
lapply(VCOSS_ACNC_Datasets_14to18,
function(data) {
data[["abn"]] <- as.numeric(data[["abn"]])
})
lapply(VCOSS_ACNC_Datasets_14to18,
function(data) {
data["abn"] <- as.numeric(data["abn"])
})
lapply(VCOSS_ACNC_Datasets_14to18,
function(data) {
data[["abn"]] <- as.numeric(data[["abn"]])
})
temp <- lapply(VCOSS_ACNC_Datasets_14to18,
function(data) {
data[["abn"]] <- as.numeric(data[["abn"]])
})
rm(temp)
lapply(VCOSS_ACNC_Datasets_14to18,
function(data) {
as.numeric(data[["abn"]])
})
lapply(VCOSS_ACNC_Datasets_14to18,
function(data) {
data <- mutate(data,
abn = as.numeric(abn))
})
VCOSS_ACNC_Datasets_14to18 <- lapply(VCOSS_ACNC_Datasets_14to18,
function(data) {
data <- mutate(data,
abn = as.numeric(abn))
})
VCOSS_cleaned_data <- clean_names(read_excel("Datasets/VCOSS - 2016 ACNC Data.xlsx"))
filter(VCOSS_ACNC_Datasets_14to18$datadotgov_ais16,
!(abn %in% VCOSS_cleaned_data$abn))
filter(VCOSS_cleaned_data,
!(abn %in% VCOSS_ACNC_Datasets_14to18$datadotgov_ais16$abn))
rm(list=ls())
gc()
beepr::beep(4)
beepr::beep(6)
beepr::beep(5)
source('B:/Analytics/VCOSS_ACNC_Report/Data_Cleaning.R', echo=TRUE)
nrow(VCOSS_cleaned_data)
nrow(VCOSS_ACNC_Datasets_14to18$datadotgov_ais16)
unique(VCOSS_ACNC_Datasets_14to18$datadotgov_ais16$main_activity)
sort(unique(VCOSS_ACNC_Datasets_14to18$datadotgov_ais16$main_activity))
filter(VCOSS_ACNC_Datasets_14to18$datadotgov_ais16,
!str_detect(main_activity,
regex("religi", ignore_case = TRUE)))
unique(VCOSS_ACNC_Datasets_14to18$datadotgov_ais16$imbalanced_grants)
unique(VCOSS_ACNC_Datasets_14to18$datadotgov_ais16$invalid_negative_values)
unique(VCOSS_ACNC_Datasets_14to18$datadotgov_ais16$excessive_expenses)
unique(VCOSS_ACNC_Datasets_14to18$datadotgov_ais16$inaccurate_expenses_reported)
unique(VCOSS_ACNC_Datasets_14to18$datadotgov_ais16$Valid_ABN)
lapply(ACNC_Datasets_13to18,
function(data) {
filter(data,
Valid_ABN == "Valid ABN")
})
rm(list=ls())
gc()
source('B:/Analytics/VCOSS_ACNC_Report/Data_Cleaning.R', echo=TRUE)
unique(VCOSS_ACNC_Datasets_14to18$datadotgov_ais16$correct_charitysize)
unique(VCOSS_ACNC_Datasets_14to18$datadotgov_ais16$inaccurate_income_reported)
nrow(VCOSS_ACNC_Datasets_14to18$datadotgov_ais16)
rm(list=ls())
gc()
source('B:/Analytics/VCOSS_ACNC_Report/Data_Cleaning.R', echo=TRUE)
sort(unique(VCOSS_cleaned_data$main_activity_2016))
sort(unique(VCOSS_ACNC_Datasets_14to18$datadotgov_ais16$main_activity))
filter(VCOSS_ACNC_Datasets_14to18$datadotgov_ais16,
main_activity == "30/06/2016")
filter(VCOSS_ACNC_Datasets_14to18$datadotgov_ais16,
main_activity == "30/06/2016") %>% View("lol")
rm(list=ls())
gc()
source('B:/Analytics/VCOSS_ACNC_Report/Data_Cleaning.R', echo=TRUE)
rm(list=ls())
gc()
source('B:/Analytics/VCOSS_ACNC_Report/Data_Cleaning.R', echo=TRUE)
unique(VCOSS_ACNC_Datasets_14to18$datadotgov_ais16$total_gross_income)
sort(unique(VCOSS_ACNC_Datasets_14to18$datadotgov_ais16$total_gross_income))
min(VCOSS_ACNC_Datasets_14to18$datadotgov_ais16$total_gross_income)
max(VCOSS_ACNC_Datasets_14to18$datadotgov_ais16$total_gross_income)
max(VCOSS_ACNC_Datasets_14to18$datadotgov_ais16$total_gross_income) %>% scales::dollar()
filter(VCOSS_ACNC_Datasets_14to18$datadotgov_ais16,
total_gross_income == max(total_gross_income))
filter(VCOSS_ACNC_Datasets_14to18$datadotgov_ais16,
total_gross_income == 2319005089)
filter(VCOSS_ACNC_Datasets_14to18$datadotgov_ais16,
total_gross_income == 2319005089) %>% View
filter(VCOSS_cleaned_data,
abn == 92119459853)
filter(VCOSS_cleaned_data,
abn == "92119459853")
filter(VCOSS_ACNC_Datasets_14to18$datadotgov_ais16,
str_detect(charity_name, "catholic"))
filter(VCOSS_ACNC_Datasets_14to18$datadotgov_ais16,
str_detect(charity_name, regex("catholic", ignore_case = TRUE)))
View(ACNC_Datasets_14to18$datadotgov_ais16)
unique(ACNC_Datasets_14to18$datadotgov_ais16$registration_status)
lapply(ACNC_Datasets_14to18,
!str_detect(registration_status, regex("revoke", ignore_case = TRUE)))
lapply(ACNC_Datasets_14to18,
function(data) {
filter(data,
!str_detect(registration_status,
regex("revoke", ignore_case = TRUE)))})
source('B:/Analytics/VCOSS_ACNC_Report/Data_Cleaning.R', echo=TRUE)
colnames(ACNC_Datasets_14to18)
source('B:/Analytics/VCOSS_ACNC_Report/Data_Cleaning.R', echo=TRUE)
rm(list=ls())
gc()
source('B:/Analytics/VCOSS_ACNC_Report/Data_Cleaning.R', echo=TRUE)
colnames(ACNC_Datasets_14to18)
colnames(ACNC_Datasets_14to18$datadotgov_ais16)
sort(colnames(ACNC_Datasets_14to18$datadotgov_ais16))
unique(ACNC_Datasets_14to18$datadotgov_ais16$religious_activities)
lapply(ACNC_Datasets_14to18,
function(data) {
filter(data,
religious_activities == FALSE)
})
rm(list=ls())
gc()
source('B:/Analytics/VCOSS_ACNC_Report/Data_Cleaning.R', echo=TRUE)
NaN
is.finite(NaN)
is.finite(Inf)
is.finite(-3)
rm(list=ls())
gc()
beepr::beep(4)
beepr::beep(5)
source('B:/Analytics/VCOSS_ACNC_Report/Data_Cleaning.R', echo=TRUE)
source('B:/Analytics/VCOSS_ACNC_Report/Data_Cleaning.R', echo=TRUE)
is.finite(0/100)
source('B:/Analytics/VCOSS_ACNC_Report/Data_Cleaning.R', echo=TRUE)
rm(list=ls())
gc()
source('B:/Analytics/VCOSS_ACNC_Report/Data_Cleaning.R', echo=TRUE)
is.finite(0/0)
0/0
abs(0/0)
Employee_expenses <- function(data) {
data <- mutate(data,
total_employees = sum(c_across(employee_cols), na.rm = TRUE),
employeeexpenses_per_employee = case_when(total_employees == 0 ~ 0,
total_employees != 0 ~ employee_expenses / total_employees),
excessive_expenses = case_when(!(is.finite(employeeexpenses_per_employee)) ~ "inaccurate reporting",
total_employees < 0 &
employeeexpenses_per_employee > 0 ~ "inaccurate reporting",
total_employees >= 0 &
employeeexpenses_per_employee > 300000 ~ "excessive"))
data$excessive_expenses <- replace_na(data$excessive_expenses,
"not excessive")
return(data)
}
lapply(VCOSS_ACNC_Datasets_14to18,
Employee_expenses)
rm(list=ls())
gc()
source('B:/Analytics/VCOSS_ACNC_Report/Data_Cleaning.R', echo=TRUE)
filter(ACNC_Datasets_14to18$datadotgov_ais16,
abn == "16404206269")
filter(ACNC_Datasets_14to18$datadotgov_ais16,
abn == 16404206269)
name(ACNC_Datasets_14to18$datadotgov_ais16)
names(ACNC_Datasets_14to18$datadotgov_ais16)
quo_name(ACNC_Datasets_14to18$datadotgov_ais16)
quo_name(quo(ACNC_Datasets_14to18$datadotgov_ais16))
quo(ACNC_Datasets_14to18$datadotgov_ais16)
quo_name(quo(ACNC_Datasets_14to18$datadotgov_ais16))
lapply(VCOSS_ACNC_Datasets_14to18,
function(data){
write_csv(x = data,
path = file.path("Cleaned Data",
quo_name(quo(data))))
})
lapply(VCOSS_ACNC_Datasets_14to18,
function(data){
write_csv(x = data,
path = file.path("Cleaned Data",
paste0(quo_name(quo(data))),
".csv"))
})
lapply(VCOSS_ACNC_Datasets_14to18,
function(data){
write_csv(x = data,
path = file.path("Cleaned_Data",
paste0(quo_name(quo(data))),
".csv"))
})
file.path("Cleaned_Data",
paste0(quo_name(quo(data))),
".csv")
lapply(VCOSS_ACNC_Datasets_14to18,
function(data){
write_csv(x = data,
path = file.path("Cleaned_Data",
paste0(quo_name(quo(data)),
".csv")))
})
for(data in VCOSS_ACNC_Datasets_14to18) {
print(quo(data))
}
for(data in VCOSS_ACNC_Datasets_14to18) {
print(quo_name(data))
}
for(data in VCOSS_ACNC_Datasets_14to18) {
print(quo_name(quo(data)))
}
print(quo_name(quo(names(data))))
for(data in VCOSS_ACNC_Datasets_14to18) {
print(quo_name(quo(names(data))))
}
objects(VCOSS_ACNC_Datasets_14to18)
for(data in VCOSS_ACNC_Datasets_14to18) {
print(objects(VCOSS_ACNC_Datasets_14to18[data]))
}
for(data in VCOSS_ACNC_Datasets_14to18) {
print(objects(VCOSS_ACNC_Datasets_14to18[[data]]))
}
objects(VCOSS_ACNC_Datasets_14to18)
for(data in VCOSS_ACNC_Datasets_14to18) {
print(data)
}
for(data in VCOSS_ACNC_Datasets_14to18) {
deparse(substitute(data))
}
for(data in VCOSS_ACNC_Datasets_14to18) {
print(deparse(substitute(data)))
}
length(objects(VCOSS_ACNC_Datasets_14to18))
system.time(
lapply(VCOSS_ACNC_Datasets_14to18,
function(data){
write_csv(x = data,
path = file.path("Cleaned_Data",
paste0(quo_name(quo(data)),
".csv")))
}))
data
system.time(
lapply(VCOSS_ACNC_Datasets_14to18,
function(data){
write_csv(x = data,
path = file.path("Cleaned_Data",
paste0(quo_name(quo(data)),
".csv")))
}))
system.time(
for(data in 1:length(objects(VCOSS_ACNC_Datasets_14to18))) {
file_name <- objects(VCOSS_ACNC_Datasets_14to18)[data]
write_csv(x = VCOSS_ACNC_Datasets_14to18[data],
path = file.path("Cleaned_Data",
paste0(file_name, ".csv")))
}
)
data
VCOSS_ACNC_Datasets_14to18[data]
class(VCOSS_ACNC_Datasets_14to18[data])
system.time(
for(data in 1:length(objects(VCOSS_ACNC_Datasets_14to18))) {
file_name <- objects(VCOSS_ACNC_Datasets_14to18)[data]
write_csv(x = as.data.frame(VCOSS_ACNC_Datasets_14to18[data]),
path = file.path("Cleaned_Data",
paste0(file_name, ".csv")))
}
)
system.time(
lapply(VCOSS_ACNC_Datasets_14to18,
function(data){
write_csv(x = data,
path = file.path("Cleaned_Data",
paste0(quo_name(quo(data)),
".csv")))
}))
system.time(
for(data in 1:length(objects(VCOSS_ACNC_Datasets_14to18))) {
file_name <- objects(VCOSS_ACNC_Datasets_14to18)[data]
write_csv(x = as.data.frame(VCOSS_ACNC_Datasets_14to18[data]),
path = file.path("Cleaned_Data",
paste0(file_name, ".csv")))
}
)
cbind(VCOSS_ACNC_Datasets_14to18)
rbind(VCOSS_ACNC_Datasets_14to18)
VCOSS_ACNC_Datasets_Combined <- data.frame()
cbind(as.data.frame(VCOSS_ACNC_Datasets_14to18))
rbind(as.data.frame(VCOSS_ACNC_Datasets_14to18))
merge(as.data.frame(VCOSS_ACNC_Datasets_14to18))
rbind(as.data.frame(VCOSS_ACNC_Datasets_14to18[1]),
as.data.frame(VCOSS_ACNC_Datasets_14to18[2]))
names(VCOSS_ACNC_Datasets_14to18$datadotgov_ais14)
names(VCOSS_ACNC_Datasets_14to18$datadotgov_ais14)[which(!(names(VCOSS_ACNC_Datasets_14to18$datadotgov_ais14) %in%
names(VCOSS_ACNC_Datasets_14to18$datadotgov_ais15)))]
rbind(VCOSS_ACNC_Datasets_14to18[1]),
VCOSS_ACNC_Datasets_14to18[2])
rbind(VCOSS_ACNC_Datasets_14to18[1],
VCOSS_ACNC_Datasets_14to18[2])
VCOSS_ACNC_Datasets_14to18[1]
as.data.frame(VCOSS_ACNC_Datasets_14to18[1])
rbind(as.data.frame(VCOSS_ACNC_Datasets_14to18[1]),
as.data.frame(VCOSS_ACNC_Datasets_14to18[2]))
names_14 <- names(VCOSS_ACNC_Datasets_14to18[1])
names_14
names(VCOSS_ACNC_Datasets_14to18[[1]])
rbind(as.data.frame(VCOSS_ACNC_Datasets_14to18[[1]]),
as.data.frame(VCOSS_ACNC_Datasets_14to18[[2]]))
rm(names_14 )
VCOSS_ACNC_Datasets_Combined
for(data in 1:length(objects(VCOSS_ACNC_Datasets_14to18))) {
file_name <- objects(VCOSS_ACNC_Datasets_14to18)[data]
write_csv(x = as.data.frame(VCOSS_ACNC_Datasets_14to18[data]),
path = file.path("Cleaned_Data",
paste0(file_name, ".csv")))
VCOSS_ACNC_Datasets_Combined <- rbind(VCOSS_ACNC_Datasets_Combined,
as.data.frame(VCOSS_ACNC_Datasets_14to18[data]))
}
for(data in 1:length(objects(VCOSS_ACNC_Datasets_14to18))) {
file_name <- objects(VCOSS_ACNC_Datasets_14to18)[data]
write_csv(x = as.data.frame(VCOSS_ACNC_Datasets_14to18[data]),
path = file.path("Cleaned_Data",
paste0(file_name, ".csv")))
VCOSS_ACNC_Datasets_Combined <- rbind(VCOSS_ACNC_Datasets_Combined,
as.data.frame(VCOSS_ACNC_Datasets_14to18[[data]]))
}
VCOSS_ACNC_Datasets_Combined
VCOSS_ACNC_Datasets_Combined <- data.frame()
VCOSS_ACNC_Datasets_Combined
for(data in 1:length(objects(VCOSS_ACNC_Datasets_14to18))) {
file_name <- objects(VCOSS_ACNC_Datasets_14to18)[data]
write_csv(x = as.data.frame(VCOSS_ACNC_Datasets_14to18[data]),
path = file.path("Cleaned_Data",
paste0(file_name, ".csv")))
VCOSS_ACNC_Datasets_Combined <- rbind(VCOSS_ACNC_Datasets_Combined,
as.data.frame(VCOSS_ACNC_Datasets_14to18[[data]]))
}
VCOSS_ACNC_Datasets_Combined
nrow(VCOSS_ACNC_Datasets_Combined)
write_csv(VCOSS_ACNC_Datasets_Combined,
path = file.path("Cleaned_Data",
"vcoss_acncdata_combined.csv"))
